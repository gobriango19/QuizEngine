//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(QuizEngine.Data.QuizEngineDbContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsc9968d8052bac8e49185480ac99b85f703cae795b664070429c9e17648177220))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySetsc9968d8052bac8e49185480ac99b85f703cae795b664070429c9e17648177220 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "c9968d8052bac8e49185480ac99b85f703cae795b664070429c9e17648177220"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.Answer")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.Question")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.Quiz")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.Result")
            {
                return GetView3();
            }

            if (extentName == "QuizEngineDbContext.Answers")
            {
                return GetView4();
            }

            if (extentName == "QuizEngineDbContext.Questions")
            {
                return GetView5();
            }

            if (extentName == "QuizEngineDbContext.Quizzes")
            {
                return GetView6();
            }

            if (extentName == "QuizEngineDbContext.Results")
            {
                return GetView7();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Answer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Answer
        [CodeFirstDatabaseSchema.Answer](T1.Answer_AnswerId, T1.Answer_Answer, T1.Answer_ImageUrl, T1.Answer_Score, T1.Answer_Sequence, T1.Answer_QuestionId, T1.Answer_CreateDate, T1.Answer_UpdateDate)
    FROM (
        SELECT 
            T.AnswerId AS Answer_AnswerId, 
            T.AnswerText AS Answer_Answer, 
            T.ImageUrl AS Answer_ImageUrl, 
            T.Score AS Answer_Score, 
            T.Sequence AS Answer_Sequence, 
            T.QuestionId AS Answer_QuestionId, 
            T.CreateDate AS Answer_CreateDate, 
            T.UpdateDate AS Answer_UpdateDate, 
            True AS _from0
        FROM QuizEngineDbContext.Answers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Question.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Question
        [CodeFirstDatabaseSchema.Question](T1.Question_QuestionId, T1.Question_Question, T1.Question_ImageUrl, T1.Question_Sequence, T1.Question_QuizId, T1.Question_CreateDate, T1.Question_UpdateDate)
    FROM (
        SELECT 
            T.QuestionId AS Question_QuestionId, 
            T.QuestionText AS Question_Question, 
            T.ImageUrl AS Question_ImageUrl, 
            T.Sequence AS Question_Sequence, 
            T.QuizId AS Question_QuizId, 
            T.CreateDate AS Question_CreateDate, 
            T.UpdateDate AS Question_UpdateDate, 
            True AS _from0
        FROM QuizEngineDbContext.Questions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Quiz.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Quiz
        [CodeFirstDatabaseSchema.Quiz](T1.Quiz_QuizId, T1.Quiz_Name, T1.Quiz_Description, T1.Quiz_ImageUrl, T1.Quiz_IsActive, T1.Quiz_CreateDate, T1.Quiz_UpdateDate)
    FROM (
        SELECT 
            T.QuizId AS Quiz_QuizId, 
            T.Name AS Quiz_Name, 
            T.Description AS Quiz_Description, 
            T.ImageUrl AS Quiz_ImageUrl, 
            T.IsActive AS Quiz_IsActive, 
            T.CreateDate AS Quiz_CreateDate, 
            T.UpdateDate AS Quiz_UpdateDate, 
            True AS _from0
        FROM QuizEngineDbContext.Quizzes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Result.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Result
        [CodeFirstDatabaseSchema.Result](T1.Result_ResultId, T1.Result_Name, T1.Result_Description, T1.Result_ImageUrl, T1.Result_MinScore, T1.Result_MaxScore, T1.Result_QuizId, T1.Result_CreateDate, T1.Result_UpdateDate)
    FROM (
        SELECT 
            T.ResultId AS Result_ResultId, 
            T.Name AS Result_Name, 
            T.Description AS Result_Description, 
            T.ImageUrl AS Result_ImageUrl, 
            T.MinScore AS Result_MinScore, 
            T.MaxScore AS Result_MaxScore, 
            T.QuizId AS Result_QuizId, 
            T.CreateDate AS Result_CreateDate, 
            T.UpdateDate AS Result_UpdateDate, 
            True AS _from0
        FROM QuizEngineDbContext.Results AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for QuizEngineDbContext.Answers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Answers
        [QuizEngine.Data.Answer](T1.Answer_AnswerId, T1.Answer_AnswerText, T1.Answer_ImageUrl, T1.Answer_Score, T1.Answer_Sequence, T1.Answer_QuestionId, T1.Answer_CreateDate, T1.Answer_UpdateDate)
    FROM (
        SELECT 
            T.AnswerId AS Answer_AnswerId, 
            T.Answer AS Answer_AnswerText, 
            T.ImageUrl AS Answer_ImageUrl, 
            T.Score AS Answer_Score, 
            T.Sequence AS Answer_Sequence, 
            T.QuestionId AS Answer_QuestionId, 
            T.CreateDate AS Answer_CreateDate, 
            T.UpdateDate AS Answer_UpdateDate, 
            True AS _from0
        FROM CodeFirstDatabase.Answer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for QuizEngineDbContext.Questions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Questions
        [QuizEngine.Data.Question](T1.Question_QuestionId, T1.Question_QuestionText, T1.Question_ImageUrl, T1.Question_Sequence, T1.Question_QuizId, T1.Question_CreateDate, T1.Question_UpdateDate)
    FROM (
        SELECT 
            T.QuestionId AS Question_QuestionId, 
            T.Question AS Question_QuestionText, 
            T.ImageUrl AS Question_ImageUrl, 
            T.Sequence AS Question_Sequence, 
            T.QuizId AS Question_QuizId, 
            T.CreateDate AS Question_CreateDate, 
            T.UpdateDate AS Question_UpdateDate, 
            True AS _from0
        FROM CodeFirstDatabase.Question AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for QuizEngineDbContext.Quizzes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Quizzes
        [QuizEngine.Data.Quiz](T1.Quiz_QuizId, T1.Quiz_Name, T1.Quiz_Description, T1.Quiz_ImageUrl, T1.Quiz_IsActive, T1.Quiz_CreateDate, T1.Quiz_UpdateDate)
    FROM (
        SELECT 
            T.QuizId AS Quiz_QuizId, 
            T.Name AS Quiz_Name, 
            T.Description AS Quiz_Description, 
            T.ImageUrl AS Quiz_ImageUrl, 
            T.IsActive AS Quiz_IsActive, 
            T.CreateDate AS Quiz_CreateDate, 
            T.UpdateDate AS Quiz_UpdateDate, 
            True AS _from0
        FROM CodeFirstDatabase.Quiz AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for QuizEngineDbContext.Results.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Results
        [QuizEngine.Data.Result](T1.Result_ResultId, T1.Result_Name, T1.Result_Description, T1.Result_ImageUrl, T1.Result_MinScore, T1.Result_MaxScore, T1.Result_QuizId, T1.Result_CreateDate, T1.Result_UpdateDate)
    FROM (
        SELECT 
            T.ResultId AS Result_ResultId, 
            T.Name AS Result_Name, 
            T.Description AS Result_Description, 
            T.ImageUrl AS Result_ImageUrl, 
            T.MinScore AS Result_MinScore, 
            T.MaxScore AS Result_MaxScore, 
            T.QuizId AS Result_QuizId, 
            T.CreateDate AS Result_CreateDate, 
            T.UpdateDate AS Result_UpdateDate, 
            True AS _from0
        FROM CodeFirstDatabase.Result AS T
    ) AS T1");
        }
    }
}
